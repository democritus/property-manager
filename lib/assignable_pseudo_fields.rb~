module AssignablePseudoFields    
  
  def self.included(base_class)
    base_class.class_eval do
      include AssignablePseudoFields::InstanceMethods
      attr_accessor :primary_category_id, :primary_style_id
      after_update :synch_primary_attributes
    end
  end
  
  module InstanceMethods
    def primary_category_id
      category_assignment = self.category_assignments.find(:first,
        :conditions => { :primary_category => 1 }
      )
      if category_assignment.nil?
        return nil
      end
      return category_assignment.category_id.to_s
    end
    
    def primary_style_id
      style_assignment = self.style_assignments.find(:first,
        :conditions => { :primary_style => 1 }
      )
      if style_assignment.nil?
        return nil
      end
      return style_assignment.style_id.to_s
    end
    
    
    protected
    
    def synch_primary_attributes
      primary_attribute_included_in_id_list = false
      self.category_assignments.update_all(:primary_category => false)
      self.category_ids.each do |category_id|
        if self.primary_category_id.blank?
          self.primary_category_id = category_id
        end
        if category_id.to_s == self.primary_category_id.to_s
          primary_attribute_included_in_id_list = true
          self.category_assignments.update_all(
            { :primary_category => true },
            { :category_id => category_id },
            { :limit => 1 }
          )
        end
      end
      unless self.primary_category_id.blank?
        unless primary_attribute_included_in_id_list
          self.category_assignments.create!(
            :category_id => self.primary_category_id,
            :primary_category => true
          )
        end
      end
      
      primary_attribute_included_in_id_list = false
      self.style_assignments.update_all(:primary_style => false)
      self.style_ids.each do |style_id|
        if self.primary_style_id.blank?
          self.primary_style_option_id = style_id
        end
        if style_id.to_s == self.primary_style_id.to_s
          primary_attribute_included_in_id_list = true
          self.style_assignments.update_all(
            { :primary_style => true },
            { :style_id => style_id },
            { :limit => 1 }
          )
        end
      end
      unless self.primary_style_id.blank?
        unless primary_attribute_included_in_id_list
          self.style_assignments.create!(
            :style_id => self.primary_style_id,
            :primary_style => true
          )
        end
      end
    end
  end
  
end
