class AgentsController < ApplicationController

  # Auto complete
  # REMOVED: couldn't get conditions to merge, manually added method to
  # controller
  #auto_complete_for :user, :login
    # creates hidden method: auto_complete_for_agent_user_id
    
  protect_from_forgery :except => [
    :auto_complete_for_agent_user_id
  ]
    # script.aculo.us sends AJAX using POST instead of GET, so AJAX doesn't
    # work when protect_from_forgery is turned on
  
  before_filter :set_agency
  
  # GET /agents
  # GET /agents.xml
  def index
    @agents = Agent.all

    respond_to do |format|
      format.html # index.html.erb
      format.xml  { render :xml => @agents }
    end
  end

  # GET /agents/1
  # GET /agents/1.xml
  def show
    @agent = Agent.find(params[:id])

    respond_to do |format|
      format.html # show.html.erb
      format.xml  { render :xml => @agent }
    end
  end

  # GET /agents/new
  # GET /agents/new.xml
  def new
    @agent = Agent.new
    
    respond_to do |format|
      format.html # new.html.erb
      format.xml  { render :xml => @agent }
    end
  end

  # GET /agents/1/edit
  def edit
    if params[:context_type] == 'agencies'
      @agency = context_object( :include => :agents )
    end
    @agent = Agent.find(params[:id])
  end

  # POST /agents
  # POST /agents.xml
  def create
    @agent = @agency.agents.build( params[:agent] )
    
    associate_agency_id_with_new_agent

    respond_to do |format|
      if @agent.save
        flash[:notice] = 'Agent was successfully created.'
        format.html { redirect_to(context_url) }
        format.xml  { render :xml => @agent,
          :status => :created, :location => @agent }
      else
        format.html { render :action => "new" }
        format.xml  { render :xml => @agent.errors,
          :status => :unprocessable_entity }
      end
    end
  end

  # PUT /agents/1
  # PUT /agents/1.xml
  def update
    @agent = Agent.find(params[:id])

    respond_to do |format|
      if @agent.update_attributes(params[:agent])
        flash[:notice] = 'Agent was successfully updated.'
        format.html { redirect_to(context_url) }
        format.xml  { head :ok }
      else
        format.html { render :action => "edit" }
        format.xml  { render :xml => @agent.errors,
          :status => :unprocessable_entity }
      end
    end
  end

  # DELETE /agents/1
  # DELETE /agents/1.xml
  def destroy
    @agent = Agent.find(params[:id])
    @agent.destroy

    respond_to do |format|
      format.html { redirect_to(context_url) }
      format.xml  { head :ok }
    end
  end
  
  def auto_complete_for_agent_user_id
    find_options = { 
      #:include => :user, # REMOVED: causes all fields to be
        #selected AS t0_r0, t1_r1, etc.
      :joins => 'LEFT JOIN `users` ON `users`.`id` = `agents`.`user_id`',
      :conditions => [
        "(LOWER(users.login) LIKE :x OR LOWER(users.email)" +
          " LIKE :x OR users.id = :y) AND agents.id IS NULL",
        #TESTING "(LOWER(users.login) LIKE :x OR LOWER(users.email)" +
          #" LIKE :x OR users.id = :y)",
        { :x => '%' + params[:agent][:user_id].downcase + '%',
          :y => params[:agent][:user_id] }
      ],
      :select => "CONCAT(users.id, ', ', TRIM(CONCAT(users.first_name, ' ', " +
        "users.last_name)), ', ', users.login, ', ', users.email) AS user_info",
      :order => "users.login ASC",
      :limit => 10 }
    @agents = Agent.find(:all, find_options)
    render :inline => "<%= auto_complete_result @agents, :user_info %>"
    #render :layout => false
  end
  
  
  private
  
  # If nested, set parent instance variable (agency)
  def set_agency
    if params[:context_type] == 'agencies'
      @agency = context_object( :include => :agents ) # If nested
    end
  end
  
  # Allow nested access /agency/1/agents/1 or not nested access /agents/1
  def context_url
    unless @agency.nil?
      agency_url(@agency)
    else
      agent_url(@agent)
    end
  end
  
  def associate_agency_id_with_new_agent
    unless @agency.id.nil?
      unless @agent.agent_affiliations[0].nil?
        @agent.agent_affiliations[0][:agency_id] = @agency.id
      end
    end
  end
  
end
