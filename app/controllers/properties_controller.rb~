class PropertiesController < ApplicationController
  # GET /properties
  # GET /properties.xml
  def index
    @properties = Property.all

    respond_to do |format|
      format.html # index.html.erb
      format.xml  { render :xml => @properties }
    end
  end

  # GET /properties/1
  # GET /properties/1.xml
  def show
    @property = Property.find(params[:id])

    respond_to do |format|
      format.html # show.html.erb
      format.xml  { render :xml => @property }
    end
  end

  # GET /properties/new
  # GET /properties/new.xml
  def new
    @property = Property.new
    
    # Data for lists
    set_form_list_data
    
    # Selected data for lists
    set_selected_data
    
    respond_to do |format|
      format.html # new.html.erb
      format.xml  { render :xml => @property }
    end
  end

  # GET /properties/1/edit
  def edit
    @property = Property.find(params[:id], :include => :categories)
    
    # Pseudo attributes
    #@property.primary_category_id = @property.get_primary_category_id
    #@property.primary_style_id = @property.get_primary_style_id
    
    # Data for lists
    set_form_list_data
    
    # Selected data for lists
    set_selected_data
  end

  # POST /properties
  # POST /properties.xml
  def create
    @property = Property.new(params[:property])

    respond_to do |format|
      if @property.save
        flash[:notice] = 'Property was successfully created.'
        # Redirect to new listing form if no listings exist
        unless @property.listings.empty?
          format.html { redirect_to(@property) }
        else 
          format.html { redirect_to(new_property_listing_url(@property)) }
        end
        format.xml  { render :xml => @property, :status => :created,
          :location => @property }
      else
        format.html { render :action => "new" }
        format.xml  { render :xml => @property.errors,
          :status => :unprocessable_entity }
      end
    end
  end

  # PUT /properties/1
  # PUT /properties/1.xml
  def update
    @property = Property.find(params[:id])

    respond_to do |format|
      if @property.update_attributes(params[:property])
        flash[:notice] = 'Property was successfully updated.'
        format.html { redirect_to(@property) }
        format.xml  { head :ok }
      else
        format.html { render :action => "edit" }
        format.xml  { render :xml => @property.errors,
          :status => :unprocessable_entity }
      end
    end
  end

  # DELETE /properties/1
  # DELETE /properties/1.xml
  def destroy
    @property = Property.find(params[:id])
    @property.destroy

    respond_to do |format|
      format.html { redirect_to(properties_url) }
      format.xml  { head :ok }
    end
  end
  
  
  private
  
  def set_form_list_data
    @lists = {}
    @lists[:zones] = Zone.find(:all).map { |zone| [zone.name, zone.id.to_s] }
    @lists[:provinces] = Province.find(:all).map {
      |province| [province.name, province.id.to_s] }
    @lists[:barrios] = Barrio.find(:all).map {
      |barrio| [barrio.name, barrio.id.to_s] }
    @lists[:categories] = Category.find(:all).map {
      |category| [category.name, category.id.to_s]
    }
    @lists[:features] = Feature.find(:all).map {
      |feature| [feature.name, feature.id.to_s]
    }
    @lists[:styles] = Style.find(:all).map {
      |style| [style.name, style.id.to_s]
    }
  end
  
  def set_selected_data
    @selected = {}
    @selected[:category_ids] = @property.category_assignments.map {
      |category_assignment| category_assignment.category_id.to_s
    }
    @selected[:feature_ids] = @property.feature_assignments.map {
      |feature_assignment| feature_assignment.feature_id.to_s
    }
    @selected[:style_ids] = @property.style_assignments.map {
      |style_assignment| style_assignment.style_id.to_s
    }
  end
  
end
