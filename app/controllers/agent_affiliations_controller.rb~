class AgentAffiliationsController < ApplicationController
  # GET /agent_affiliations
  # GET /agent_affiliations.xml
  def index
    # Enable nested behavior
    @affiliable = context_object( :include => :agent_affiliations )
    @agent_affiliations = @affiliable.agent_affiliations
    
    # Data for lists
    set_form_list_data

    respond_to do |format|
      format.html # index.html.erb
      format.xml  { render :xml => @agent_affiliations }
    end
  end

  # GET /agent_affiliations/1
  # GET /agent_affiliations/1.xml
  def show
    @agent_affiliation = AgentAffiliation.find(params[:id])

    respond_to do |format|
      format.html # show.html.erb
      format.xml  { render :xml => @agent_affiliation }
    end
  end

  # GET /agent_affiliations/new
  # GET /agent_affiliations/new.xml
  def new
    @agent_affiliation = AgentAffiliation.new

    respond_to do |format|
      format.html # new.html.erb
      format.xml  { render :xml => @agent_affiliation }
    end
  end

  # GET /agent_affiliations/1/edit
  def edit
    @agent_affiliation = AgentAffiliation.find(params[:id])
  end

  # POST /agent_affiliations
  # POST /agent_affiliations.xml
  def create
    # Enable nested behavior
    @affilable = context_object( :include => :agent_affiliations )
    @agent_affiliation = @affilable.agent_affiliations.build(
      params[:agent_affiliation] )

    respond_to do |format|
      if @agent_affiliation.save
        flash[:notice] = 'AgentAffiliation was successfully created.'
        format.html { redirect_to(polymorphic_url([@affiliable,
          :agent_affiliations])) }
        format.xml  { render :xml => @agent_affiliation, :status => :created, :location => @agent_affiliation }
      else
        format.html { render :action => "new" }
        format.xml  { render :xml => @agent_affiliation.errors, :status => :unprocessable_entity }
      end
    end
  end

  # PUT /agent_affiliations/1
  # PUT /agent_affiliations/1.xml
  def update
    @agent_affiliation = AgentAffiliation.find(params[:id])

    respond_to do |format|
      if @agent_affiliation.update_attributes(params[:agent_affiliation])
        flash[:notice] = 'AgentAffiliation was successfully updated.'
        
        @affiliable = context_object(
          :include => :agent_affiliations )
        format.html { redirect_to(polymorphic_url([@affiliable,
          :agent_affiliations])) }
          
        format.xml  { head :ok }
      else
        format.html { render :action => "edit" }
        format.xml  { render :xml => @agent_affiliation.errors, :status => :unprocessable_entity }
      end
    end
  end

  # DELETE /agent_affiliations/1
  # DELETE /agent_affiliations/1.xml
  def destroy
    @agent_affiliation = AgentAffiliation.find(params[:id])
    @agent_affiliation.destroy

    respond_to do |format|
      format.html { redirect_to(agent_affiliations_url) }
      format.xml  { head :ok }
    end
  end
  
  
  private
  
  # Handle nested polymorphic actions
  def context_object( *finder_options )
    params[:context_type].classify.constantize.find( context_id, *finder_options )
  end
  
  def context_id
    params["#{ params[:context_type].singularize }_id"]
  end
    
end
