class AgenciesController < ApplicationController
  # GET /agencies
  # GET /agencies.xml
  def index
    @agencies = Agency.all

    respond_to do |format|
      format.html # index.html.erb
      format.xml  { render :xml => @agencies }
    end
  end

  # GET /agencies/1
  # GET /agencies/1.xml
  def show
    @agency = Agency.find(params[:id])

    respond_to do |format|
      format.html # show.html.erb
      format.xml  { render :xml => @agency }
    end
  end

  # GET /agencies/new
  # GET /agencies/new.xml
  def new
    @agency = Agency.new
    
    # Data for lists
    set_form_list_data
    
    # Selected data for lists
    set_selected_data
    
    respond_to do |format|
      format.html # new.html.erb
      format.xml  { render :xml => @agency }
    end
  end

  # GET /agencies/1/edit
  def edit
    @agency = Agency.find(params[:id], :include => :markets)
    
    # Pseudo attributes
    @agency.broker_id = @agency.get_broker_id
    
    # Data for lists
    set_form_list_data
    
    # Selected data for lists
    set_selected_data
  end

  # POST /agencies
  # POST /agencies.xml
  def create
    @agency = Agency.new(params[:agency])

    respond_to do |format|
      if @agency.save
        flash[:notice] = 'Agency was successfully created.'
        # Redirect to agent affiliation form if no agents associated
        unless @agency.agent_affiliations.empty?
          format.html { redirect_to(@agency) }
        else 
          format.html { redirect_to(new_agency_agent_affiliation_url(@agency)) }
        end
        format.xml  { render :xml => @agency,
          :status => :created, :location => @agency }
      else
        format.html { render :action => "new" }
        format.xml  { render :xml => @agency.errors,
          :status => :unprocessable_entity }
      end
    end
  end

  # PUT /agencies/1
  # PUT /agencies/1.xml
  def update
    @agency = Agency.find(params[:id])

    respond_to do |format|
      if @agency.update_attributes(params[:agency])
        flash[:notice] = 'Agency was successfully updated.'
        format.html { redirect_to(@agency) }
        format.xml  { head :ok }
      else
        format.html { render :action => "edit" }
        format.xml  { render :xml => @agency.errors,
          :status => :unprocessable_entity }
      end
    end
  end

  # DELETE /agencies/1
  # DELETE /agencies/1.xml
  def destroy
    @agency = Agency.find(params[:id])
    @agency.destroy

    respond_to do |format|
      format.html { redirect_to(agencies_url) }
      format.xml  { head :ok }
    end
  end

  # Request information about a property
  def request_info
    # Validate data
    if params[:name].blank?
      flash[:error] = 'Name is required.'
    end
    if params[:email].blank? && params[:phone].blank?
      flash[:error] = 'Either an email address or phone number is required.'
    end
    # Send email to broker
    
  end
  
  
  private
  
  def set_form_list_data
    @lists = {}
    @lists[:markets] = Market.find(:all).map {
      |market| [market.name, market.id] }
  end
  
  def set_selected_data
    @selected = {}
    @selected[:market_ids] = @agency.agency_jurisdictions.map {
      |agency_jurisdiction| agency_jurisdiction.agency_id.to_s
    }
  end
  
end
