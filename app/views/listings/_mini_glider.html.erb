<%
# TODO - caching scheme for glider
mini_glider = []
if session[:agencies]
  unless @active_agency.master_agency == true
    session_agency_id = @active_agency.id
  else
    session_agency_id = 0 # causes listings from all agencies to be saved in
                          # the same array
  end
#  # REMOVED: "recent listings" doesn't work with page caching
#  if session[:agencies][session_agency_id][:recent_listings]
#    # At least two images for aesthetics
#    if session[:agencies][session_agency_id][:recent_listings].count > 1
#      listings = Listing.find(
#        session[:agencies][session_agency_id][:recent_listings])
#      if listings
#        # Order collection in the same order as Session array
#        recent_listings = []
#        session[:agencies][session_agency_id][:recent_listings].each do |id|
#          i = 0
#          while i < listings.length do
#            if listings[i].id == id
#              recent_listings << listings[i]
#              i += 1
#              break
#            end
#            i += 1
#          end
#        end
#        unless recent_listings.empty?
#          @mini_glider << 'Recently viewed listings'
#          @mini_glider += recent_listings
#          @mini_glider += recent_listings
#          if recent_listings.length == 1
#            @mini_glider << nil # Recent Listings section must have
#                                # at least 2 images
#          end
#        end
#      end
#    end
#  end
end
if @search
  featured_listings = Listing.featured
  if featured_listings.length > 1 # At least two images for aesthetics
    mini_glider << 'Featured listings'
    mini_glider += featured_listings
  end
end
if @listing
  # TODO: create similar method in model
  # similar_listings = Listing.similar(@listing.id) 
  conditions = [ 'listing_type_id = ?', @listing.listing_type_id ]
  if @active_agency.master_agency
    similar_listings = Listing.find(:all, :conditions => conditions)
  else
    similar_listings = @active_agency.listings.find(:all,
      :conditions => conditions
    )
  end
  if similar_listings
    if similar_listings.length > 1 # At least two images for aesthetics
      mini_glider << 'Similar listings' # Insert "Recent Listings" placeholder
      mini_glider += similar_listings
    end
  end
end
# TODO: add market segment images as placeholder images if no listings exist
if mini_glider.length == 0
  #@mini_glider << @active_agency.market_segment.name
  if @active_agency.market_segment
    if @active_agency.market_segment.market_segment_images
      mini_glider += @active_agency.market_segment.market_segment_images
    end
  end
end

# Set up image glider
options = {
  'type' => 'mini',
  'size' => 5,
  'image_width' => 146,
  'image_height' => 115,
  'images_per_object' => 1,
  'image_placeholders' => true
}
# Inline styles need this value to position glider correctly
glider_top_offset = 0
glider_left_offset = 11
%>
<div class="main_panel"
  style="height: <%= (options['image_height'] + glider_top_offset).to_s %>px">
  <div id="mini_glider"
    style="top: <%= glider_top_offset.to_s %>px;
      left: <%= glider_left_offset.to_s %>px;">
    <%= glider_js('recentListings', mini_glider, options) %>
    <%= glider_html('recentListings', mini_glider, options) %>
  </div>
</div>
